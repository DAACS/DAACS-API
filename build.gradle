
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.7.RELEASE")
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
}

apply plugin: "org.springframework.boot"

def buildVersion = "dev"
def appName = "daacsapi"
def groupName = "com.daacs"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    repositories {
        mavenCentral()
    }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {

    // https://mvnrepository.com/artifact/org.imsglobal/basiclti-util
    compile group: 'org.imsglobal', name: 'basiclti-util', version: '1.2.0'

    compile (
            "org.springframework.boot:spring-boot-starter-web:1.4.7.RELEASE",
            "org.springframework.boot:spring-boot-starter-jetty:1.4.7.RELEASE",
            "org.springframework.boot:spring-boot-starter-security:1.4.7.RELEASE",
            "org.springframework.boot:spring-boot-starter-actuator:1.4.7.RELEASE",
            "org.springframework.boot:spring-boot-starter-data-mongodb:1.4.7.RELEASE",
            "org.springframework.boot:spring-boot-starter-integration:1.4.7.RELEASE",
            "org.springframework.boot:spring-boot-starter-mail:1.4.7.RELEASE",
            "org.springframework.security.extensions:spring-security-saml2-core:1.0.3.RELEASE",
            "org.springframework:spring-jdbc:4.3.30.RELEASE",
            "org.springframework:spring-tx:4.3.30.RELEASE",

            "com.fasterxml.jackson.core:jackson-databind:2.8.11.6",
            "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.7.9",

            "org.apache.commons:commons-lang3:3.4",
            "commons-io:commons-io:2.5",

            "org.codehaus.groovy:groovy-all:2.4.21",
            "com.netflix.hystrix:hystrix-core:1.3.20",
            "com.lambdista:try:0.3.1",
            "com.google.guava:guava:19.0",
            "org.apache.commons:commons-collections4:4.4",
            "ma.glasnost.orika:orika-core:1.4.6",
            "io.springfox:springfox-swagger2:2.5.0",
            "io.springfox:springfox-swagger-ui:2.5.0",
            "com.opencsv:opencsv:3.8",
            "commons-fileupload:commons-fileupload:1.3.2",
            "org.apache.httpcomponents:httpclient:4.5.3",
            "com.amazonaws:aws-java-sdk-s3:1.11.69"
    )

    compile("org.springframework.security.oauth:spring-security-oauth2:2.0.10.RELEASE"){
        exclude group: 'org.codehaus.jackson'
    }

    testCompile (
            "org.springframework.boot:spring-boot-starter-test",
            'org.spockframework:spock-spring:1.0-groovy-2.4'
    )

    testRuntime (
            "cglib:cglib-nodep:3.2.2",          // allows mocking of classes (in addition to interfaces)
            "org.objenesis:objenesis:2.4"    // allows mocking of classes without default constructor (together with CGLIB)
    )
}

task setVersion() {
    if (project.hasProperty("teamcity") && teamcity["Version"] != null) {
        buildVersion = teamcity["Version"]
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.4"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = appName
            groupId = groupName
            version = buildVersion

            pom.withXml {
                def parentNode = asNode().appendNode('parent')
                parentNode.appendNode('groupId','org.springframework.boot')
                parentNode.appendNode('artifactId','spring-boot-starter-parent')
                parentNode.appendNode('version','1.4.4.RELEASE')
            }

            from components.java
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/pom.xml")
    }
}

jar {
    group = "${groupName}"
    baseName = "${appName}"
    version = "${buildVersion}"

    into("META-INF/maven/${groupName}/${appName}") {
        from "$buildDir"
        include 'pom.xml'
    }

    finalizedBy bootRepackage
}

project.tasks.whenTaskAdded { addedTask ->
    if (addedTask.name == 'generatePomFileForMavenJavaPublication') {
        project.tasks.jar.dependsOn 'generatePomFileForMavenJavaPublication'
    }
}
